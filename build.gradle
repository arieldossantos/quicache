buildscript {
    ext {
        kotest_version = "4.4.3"
        mockk_version = "1.11.0"
        kotlin_version = "1.4.10"
    }

    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:6.1.0"
    }
}

plugins {
    id "jacoco"
    id "org.jetbrains.kotlin.jvm" version "$kotlin_version"
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id "com.github.nbaztec.coveralls-jacoco" version "1.2.12"
}

apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "java"
apply plugin: "application"

mainClassName = "org.quicache.engine.QuicacheRunner"

group "org.quicache"
version "1.0-SNAPSHOT"


repositories {
    mavenCentral()
}

shadowJar {
    minimize()
    archiveBaseName.set(rootProject.name)
    archiveClassifier.set("")
    archiveVersion.set("")
    destinationDir = file("$rootDir/resources")
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "io.kotest:kotest-runner-junit5-jvm:$kotest_version"
    testImplementation "io.kotest:kotest-runner-junit5:$kotest_version"
    testImplementation "io.kotest:kotest-assertions-core:$kotest_version"
    testImplementation "io.kotest:kotest-property:$kotest_version"
    testImplementation "io.mockk:mockk:$mockk_version"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = '1.8'
        apiVersion = '1.4'
        languageVersion = '1.4'
    }
}

jacocoTestReport {
    reports {
        xml.enabled     true
        csv.enabled     true
        html.enabled    true
    }
}

coverallsJacoco {

}

test {
    useJUnitPlatform()
}